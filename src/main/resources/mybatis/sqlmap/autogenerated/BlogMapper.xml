<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzspace.blog.dal.mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="com.zzspace.blog.dal.domain.BlogDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="first_picture" jdbcType="VARCHAR" property="firstPicture" />
    <result column="flag" jdbcType="VARCHAR" property="flag" />
    <result column="view" jdbcType="INTEGER" property="view" />
    <result column="appreciation_on" jdbcType="BIT" property="appreciationOn" />
    <result column="copyright_on" jdbcType="BIT" property="copyrightOn" />
    <result column="recommend" jdbcType="BIT" property="recommend" />
    <result column="comment_on" jdbcType="BIT" property="commentOn" />
    <result column="realeased" jdbcType="BIT" property="realeased" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zzspace.blog.dal.domain.BlogDO">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, type_id, user_id, first_picture, flag, `view`, appreciation_on, copyright_on, 
    recommend, comment_on, realeased, is_deleted, gmt_created, gmt_modified
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zzspace.blog.dal.domain.BlogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zzspace.blog.dal.domain.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_blog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_blog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzspace.blog.dal.domain.BlogExample">
    delete from tb_blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzspace.blog.dal.domain.BlogDO">
    insert into tb_blog (id, title, type_id, 
      user_id, first_picture, flag, 
      `view`, appreciation_on, copyright_on, 
      recommend, comment_on, realeased, 
      is_deleted, gmt_created, gmt_modified, 
      content)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{firstPicture,jdbcType=VARCHAR}, #{flag,jdbcType=VARCHAR}, 
      #{view,jdbcType=INTEGER}, #{appreciationOn,jdbcType=BIT}, #{copyrightOn,jdbcType=BIT}, 
      #{recommend,jdbcType=BIT}, #{commentOn,jdbcType=BIT}, #{realeased,jdbcType=BIT}, 
      #{isDeleted,jdbcType=BIT}, sysdate(), sysdate(), 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzspace.blog.dal.domain.BlogDO">
    insert into tb_blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="firstPicture != null">
        first_picture,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="view != null">
        `view`,
      </if>
      <if test="appreciationOn != null">
        appreciation_on,
      </if>
      <if test="copyrightOn != null">
        copyright_on,
      </if>
      <if test="recommend != null">
        recommend,
      </if>
      <if test="commentOn != null">
        comment_on,
      </if>
      <if test="realeased != null">
        realeased,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="true">
        gmt_created,
      </if>
      <if test="true">
        gmt_modified,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="firstPicture != null">
        #{firstPicture,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="view != null">
        #{view,jdbcType=INTEGER},
      </if>
      <if test="appreciationOn != null">
        #{appreciationOn,jdbcType=BIT},
      </if>
      <if test="copyrightOn != null">
        #{copyrightOn,jdbcType=BIT},
      </if>
      <if test="recommend != null">
        #{recommend,jdbcType=BIT},
      </if>
      <if test="commentOn != null">
        #{commentOn,jdbcType=BIT},
      </if>
      <if test="realeased != null">
        #{realeased,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="true">
        sysdate(),
      </if>
      <if test="true">
        sysdate(),
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzspace.blog.dal.domain.BlogExample" resultType="java.lang.Long">
    select count(*) from tb_blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_blog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.firstPicture != null">
        first_picture = #{record.firstPicture,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=VARCHAR},
      </if>
      <if test="record.view != null">
        `view` = #{record.view,jdbcType=INTEGER},
      </if>
      <if test="record.appreciationOn != null">
        appreciation_on = #{record.appreciationOn,jdbcType=BIT},
      </if>
      <if test="record.copyrightOn != null">
        copyright_on = #{record.copyrightOn,jdbcType=BIT},
      </if>
      <if test="record.recommend != null">
        recommend = #{record.recommend,jdbcType=BIT},
      </if>
      <if test="record.commentOn != null">
        comment_on = #{record.commentOn,jdbcType=BIT},
      </if>
      <if test="record.realeased != null">
        realeased = #{record.realeased,jdbcType=BIT},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="false">
        gmt_created = sysdate(),
      </if>
      <if test="true">
        gmt_modified = sysdate(),
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tb_blog
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      first_picture = #{record.firstPicture,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=VARCHAR},
      `view` = #{record.view,jdbcType=INTEGER},
      appreciation_on = #{record.appreciationOn,jdbcType=BIT},
      copyright_on = #{record.copyrightOn,jdbcType=BIT},
      recommend = #{record.recommend,jdbcType=BIT},
      comment_on = #{record.commentOn,jdbcType=BIT},
      realeased = #{record.realeased,jdbcType=BIT},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
    
      gmt_modified = sysdate(),
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_blog
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      first_picture = #{record.firstPicture,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=VARCHAR},
      `view` = #{record.view,jdbcType=INTEGER},
      appreciation_on = #{record.appreciationOn,jdbcType=BIT},
      copyright_on = #{record.copyrightOn,jdbcType=BIT},
      recommend = #{record.recommend,jdbcType=BIT},
      comment_on = #{record.commentOn,jdbcType=BIT},
      realeased = #{record.realeased,jdbcType=BIT},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
    
      gmt_modified = sysdate()
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzspace.blog.dal.domain.BlogDO">
    update tb_blog
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="firstPicture != null">
        first_picture = #{firstPicture,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="view != null">
        `view` = #{view,jdbcType=INTEGER},
      </if>
      <if test="appreciationOn != null">
        appreciation_on = #{appreciationOn,jdbcType=BIT},
      </if>
      <if test="copyrightOn != null">
        copyright_on = #{copyrightOn,jdbcType=BIT},
      </if>
      <if test="recommend != null">
        recommend = #{recommend,jdbcType=BIT},
      </if>
      <if test="commentOn != null">
        comment_on = #{commentOn,jdbcType=BIT},
      </if>
      <if test="realeased != null">
        realeased = #{realeased,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="false">
        gmt_created = sysdate(),
      </if>
      <if test="true">
        gmt_modified = sysdate(),
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zzspace.blog.dal.domain.BlogDO">
    update tb_blog
    set title = #{title,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      first_picture = #{firstPicture,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR},
      `view` = #{view,jdbcType=INTEGER},
      appreciation_on = #{appreciationOn,jdbcType=BIT},
      copyright_on = #{copyrightOn,jdbcType=BIT},
      recommend = #{recommend,jdbcType=BIT},
      comment_on = #{commentOn,jdbcType=BIT},
      realeased = #{realeased,jdbcType=BIT},
      is_deleted = #{isDeleted,jdbcType=BIT},
    
      gmt_modified = sysdate(),
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzspace.blog.dal.domain.BlogDO">
    update tb_blog
    set title = #{title,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      first_picture = #{firstPicture,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR},
      `view` = #{view,jdbcType=INTEGER},
      appreciation_on = #{appreciationOn,jdbcType=BIT},
      copyright_on = #{copyrightOn,jdbcType=BIT},
      recommend = #{recommend,jdbcType=BIT},
      comment_on = #{commentOn,jdbcType=BIT},
      realeased = #{realeased,jdbcType=BIT},
      is_deleted = #{isDeleted,jdbcType=BIT},
    
      gmt_modified = sysdate()
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    insert into tb_blog
    (id, title, type_id, user_id, first_picture, flag, `view`, appreciation_on, copyright_on, 
      recommend, comment_on, realeased, is_deleted, gmt_created, gmt_modified, content
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.title,jdbcType=VARCHAR}, #{item.typeId,jdbcType=INTEGER}, 
        #{item.userId,jdbcType=INTEGER}, #{item.firstPicture,jdbcType=VARCHAR}, #{item.flag,jdbcType=VARCHAR}, 
        #{item.view,jdbcType=INTEGER}, #{item.appreciationOn,jdbcType=BIT}, #{item.copyrightOn,jdbcType=BIT}, 
        #{item.recommend,jdbcType=BIT}, #{item.commentOn,jdbcType=BIT}, #{item.realeased,jdbcType=BIT}, 
        #{item.isDeleted,jdbcType=BIT}, #{item.gmtCreated,jdbcType=TIMESTAMP}, #{item.gmtModified,jdbcType=TIMESTAMP}, 
        #{item.content,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into tb_blog (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'title'.toString() == column.value">
          #{item.title,jdbcType=VARCHAR}
        </if>
        <if test="'type_id'.toString() == column.value">
          #{item.typeId,jdbcType=INTEGER}
        </if>
        <if test="'user_id'.toString() == column.value">
          #{item.userId,jdbcType=INTEGER}
        </if>
        <if test="'first_picture'.toString() == column.value">
          #{item.firstPicture,jdbcType=VARCHAR}
        </if>
        <if test="'flag'.toString() == column.value">
          #{item.flag,jdbcType=VARCHAR}
        </if>
        <if test="'view'.toString() == column.value">
          #{item.view,jdbcType=INTEGER}
        </if>
        <if test="'appreciation_on'.toString() == column.value">
          #{item.appreciationOn,jdbcType=BIT}
        </if>
        <if test="'copyright_on'.toString() == column.value">
          #{item.copyrightOn,jdbcType=BIT}
        </if>
        <if test="'recommend'.toString() == column.value">
          #{item.recommend,jdbcType=BIT}
        </if>
        <if test="'comment_on'.toString() == column.value">
          #{item.commentOn,jdbcType=BIT}
        </if>
        <if test="'realeased'.toString() == column.value">
          #{item.realeased,jdbcType=BIT}
        </if>
        <if test="'is_deleted'.toString() == column.value">
          #{item.isDeleted,jdbcType=BIT}
        </if>
        <if test="'gmt_created'.toString() == column.value">
          #{item.gmtCreated,jdbcType=TIMESTAMP}
        </if>
        <if test="'gmt_modified'.toString() == column.value">
          #{item.gmtModified,jdbcType=TIMESTAMP}
        </if>
        <if test="'content'.toString() == column.value">
          #{item.content,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>